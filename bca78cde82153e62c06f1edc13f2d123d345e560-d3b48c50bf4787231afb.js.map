{"version":3,"sources":["webpack:///./node_modules/node-emoji/lib/emoji.js","webpack:///./src/util/emoji_util.js","webpack:///./node_modules/lodash.toarray/index.js","webpack:///./node_modules/node-emoji/index.js"],"names":["toArray","emojiByName","emojiNameRegex","trimSpaceRegex","stripColons","str","colonIndex","indexOf","length","substring","substr","wrapColons","NON_SPACING_MARK","String","fromCharCode","nonSpacingRegex","RegExp","stripNSB","code","replace","emojiByCode","Object","keys","reduce","h","k","Emoji","emoji","_get","hasOwnProperty","get","find","nameOrCode","findByName","findByCode","name","stripped","key","undefined","hasEmoji","hasEmojiByName","hasEmojiByCode","result","which","emoji_code","includeColons","word","emojify","on_missing","format","split","map","s","i","isMissing","join","random","emojiKeys","Math","floor","search","matcher","filter","toString","unemojify","replacement","cleanSpaces","words","replaced","idx","strip","module","exports","replaceEmojiShortcuts","text","match","mapTag","setTag","reIsHostCtor","reIsUint","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","reHasUnicode","freeGlobal","global","freeSelf","self","root","Function","baseValues","object","props","array","iteratee","index","Array","arrayMap","mapToArray","size","forEach","value","setToArray","set","stringToArray","string","test","hasUnicode","unicodeToArray","asciiToArray","uid","func","transform","funcProto","prototype","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","objectToString","reIsNative","call","Symbol","iteratorSymbol","iterator","propertyIsEnumerable","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","n","baseTimes","skipIndexes","isIndex","push","baseIsNative","isObject","isMasked","isFunction","e","isHostObject","baseKeys","Ctor","constructor","proto","getValue","getTag","ArrayBuffer","resolve","ctorString","isLength","tag","type","values","isString","source","copyArray","data","next","done","iteratorToArray"],"mappings":"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","file":"bca78cde82153e62c06f1edc13f2d123d345e560-d3b48c50bf4787231afb.js","sourcesContent":["/*jslint node: true*/\nvar toArray = require('lodash.toarray');\n\nvar emojiByName = require('./emoji.json');\n\n\"use strict\";\n/**\n * regex to parse emoji in a string - finds emoji, e.g. :coffee:\n */\n\n\nvar emojiNameRegex = /:([a-zA-Z0-9_\\-\\+]+):/g;\n/**\n * regex to trim whitespace\n * use instead of String.prototype.trim() for IE8 support\n */\n\nvar trimSpaceRegex = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n/**\n * Removes colons on either side\n * of the string if present\n * @param  {string} str\n * @return {string}\n */\n\nfunction stripColons(str) {\n  var colonIndex = str.indexOf(':');\n\n  if (colonIndex > -1) {\n    // :emoji: (http://www.emoji-cheat-sheet.com/)\n    if (colonIndex === str.length - 1) {\n      str = str.substring(0, colonIndex);\n      return stripColons(str);\n    } else {\n      str = str.substr(colonIndex + 1);\n      return stripColons(str);\n    }\n  }\n\n  return str;\n}\n/**\n * Adds colons to either side\n * of the string\n * @param {string} str\n * @return {string}\n */\n\n\nfunction wrapColons(str) {\n  return typeof str === 'string' && str.length > 0 ? ':' + str + ':' : str;\n}\n/**\n * Ensure that the word is wrapped in colons\n * by only adding them, if they are not there.\n * @param {string} str\n * @return {string}\n */\n\n\nfunction ensureColons(str) {\n  return typeof str === 'string' && str[0] !== ':' ? wrapColons(str) : str;\n} // Non spacing mark, some emoticons have them. It's the 'Variant Form',\n// which provides more information so that emoticons can be rendered as\n// more colorful graphics. FE0E is a unicode text version, where as FE0F\n// should be rendered as a graphical version. The code gracefully degrades.\n\n\nvar NON_SPACING_MARK = String.fromCharCode(65039); // 65039 - '️' - 0xFE0F;\n\nvar nonSpacingRegex = new RegExp(NON_SPACING_MARK, 'g'); // Remove the non-spacing-mark from the code, never send a stripped version\n// to the client, as it kills graphical emoticons.\n\nfunction stripNSB(code) {\n  return code.replace(nonSpacingRegex, '');\n}\n\n; // Reversed hash table, where as emojiByName contains a { heart: '❤' }\n// dictionary emojiByCode contains { ❤: 'heart' }. The codes are normalized\n// to the text version.\n\nvar emojiByCode = Object.keys(emojiByName).reduce(function (h, k) {\n  h[stripNSB(emojiByName[k])] = k;\n  return h;\n}, {});\n/**\n * Emoji namespace\n */\n\nvar Emoji = {\n  emoji: emojiByName\n};\n/**\n * get emoji code from name\n * @param  {string} emoji\n * @return {string}\n */\n\nEmoji._get = function _get(emoji) {\n  if (emojiByName.hasOwnProperty(emoji)) {\n    return emojiByName[emoji];\n  }\n\n  return ensureColons(emoji);\n};\n/**\n * get emoji code from :emoji: string or name\n * @param  {string} emoji\n * @return {string}\n */\n\n\nEmoji.get = function get(emoji) {\n  emoji = stripColons(emoji);\n  return Emoji._get(emoji);\n};\n/**\n * find the emoji by either code or name\n * @param {string} nameOrCode The emoji to find, either `coffee`, `:coffee:` or `☕`;\n * @return {object}\n */\n\n\nEmoji.find = function find(nameOrCode) {\n  return Emoji.findByName(nameOrCode) || Emoji.findByCode(nameOrCode);\n};\n/**\n * find the emoji by name\n * @param {string} name The emoji to find either `coffee` or `:coffee:`;\n * @return {object}\n */\n\n\nEmoji.findByName = function findByName(name) {\n  var stripped = stripColons(name);\n  var emoji = emojiByName[stripped];\n  return emoji ? {\n    emoji: emoji,\n    key: stripped\n  } : undefined;\n};\n/**\n * find the emoji by code (emoji)\n * @param {string} code The emoji to find; for example `☕` or `☔`\n * @return {object}\n */\n\n\nEmoji.findByCode = function findByCode(code) {\n  var stripped = stripNSB(code);\n  var name = emojiByCode[stripped]; // lookup emoji to ensure the Variant Form is returned\n\n  return name ? {\n    emoji: emojiByName[name],\n    key: name\n  } : undefined;\n};\n/**\n * Check if an emoji is known by this library\n * @param {string} nameOrCode The emoji to validate, either `coffee`, `:coffee:` or `☕`;\n * @return {object}\n */\n\n\nEmoji.hasEmoji = function hasEmoji(nameOrCode) {\n  return Emoji.hasEmojiByName(nameOrCode) || Emoji.hasEmojiByCode(nameOrCode);\n};\n/**\n * Check if an emoji with given name is known by this library\n * @param {string} name The emoji to validate either `coffee` or `:coffee:`;\n * @return {object}\n */\n\n\nEmoji.hasEmojiByName = function hasEmojiByName(name) {\n  var result = Emoji.findByName(name);\n  return !!result && result.key === stripColons(name);\n};\n/**\n * Check if a given emoji is known by this library\n * @param {string} code The emoji to validate; for example `☕` or `☔`\n * @return {object}\n */\n\n\nEmoji.hasEmojiByCode = function hasEmojiByCode(code) {\n  var result = Emoji.findByCode(code);\n  return !!result && stripNSB(result.emoji) === stripNSB(code);\n};\n/**\n * get emoji name from code\n * @param  {string} emoji\n * @param  {boolean} includeColons should the result include the ::\n * @return {string}\n */\n\n\nEmoji.which = function which(emoji_code, includeColons) {\n  var code = stripNSB(emoji_code);\n  var word = emojiByCode[code];\n  return includeColons ? wrapColons(word) : word;\n};\n/**\n * emojify a string (replace :emoji: with an emoji)\n * @param  {string} str\n * @param  {function} on_missing (gets emoji name without :: and returns a proper emoji if no emoji was found)\n * @param  {function} format (wrap the returned emoji in a custom element)\n * @return {string}\n */\n\n\nEmoji.emojify = function emojify(str, on_missing, format) {\n  if (!str) return '';\n  return str.split(emojiNameRegex) // parse emoji via regex\n  .map(function parseEmoji(s, i) {\n    // every second element is an emoji, e.g. \"test :fast_forward:\" -> [ \"test \", \"fast_forward\" ]\n    if (i % 2 === 0) return s;\n\n    var emoji = Emoji._get(s);\n\n    var isMissing = emoji.indexOf(':') > -1;\n\n    if (isMissing && typeof on_missing === 'function') {\n      return on_missing(s);\n    }\n\n    if (!isMissing && typeof format === 'function') {\n      return format(emoji, s);\n    }\n\n    return emoji;\n  }).join('') // convert back to string\n  ;\n};\n/**\n * return a random emoji\n * @return {string}\n */\n\n\nEmoji.random = function random() {\n  var emojiKeys = Object.keys(emojiByName);\n  var randomIndex = Math.floor(Math.random() * emojiKeys.length);\n  var key = emojiKeys[randomIndex];\n\n  var emoji = Emoji._get(key);\n\n  return {\n    key: key,\n    emoji: emoji\n  };\n};\n/**\n *  return an collection of potential emoji matches\n *  @param {string} str\n *  @return {Array.<Object>}\n */\n\n\nEmoji.search = function search(str) {\n  var emojiKeys = Object.keys(emojiByName);\n  var matcher = stripColons(str);\n  var matchingKeys = emojiKeys.filter(function (key) {\n    return key.toString().indexOf(matcher) === 0;\n  });\n  return matchingKeys.map(function (key) {\n    return {\n      key: key,\n      emoji: Emoji._get(key)\n    };\n  });\n};\n/**\n * unemojify a string (replace emoji with :emoji:)\n * @param  {string} str\n * @return {string}\n */\n\n\nEmoji.unemojify = function unemojify(str) {\n  if (!str) return '';\n  var words = toArray(str);\n  return words.map(function (word) {\n    return Emoji.which(word, true) || word;\n  }).join('');\n};\n/**\n * replace emojis with replacement value\n * @param {string} str\n * @param {function|string} the string or callback function to replace the emoji with\n * @param {boolean} should trailing whitespaces be cleaned? Defaults false\n * @return {string}\n */\n\n\nEmoji.replace = function replace(str, replacement, cleanSpaces) {\n  if (!str) return '';\n  var replace = typeof replacement === 'function' ? replacement : function () {\n    return replacement;\n  };\n  var words = toArray(str);\n  var replaced = words.map(function (word, idx) {\n    var emoji = Emoji.findByCode(word);\n\n    if (emoji && cleanSpaces && words[idx + 1] === ' ') {\n      words[idx + 1] = '';\n    }\n\n    return emoji ? replace(emoji) : word;\n  }).join('');\n  return cleanSpaces ? replaced.replace(trimSpaceRegex, '') : replaced;\n};\n/**\n * remove all emojis from a string\n * @param {string} str\n * @return {string}\n */\n\n\nEmoji.strip = function strip(str) {\n  return Emoji.replace(str, '', true);\n};\n\nmodule.exports = Emoji;","import emoji from \"node-emoji\"\n\nexport default function replaceEmojiShortcuts(text) {\n  const RE_EMOJI = /:\\+1:|:-1:|:[\\w-]+:/g\n  return text.replace(RE_EMOJI, function (match) {\n    return emoji.get(match)\n  })\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/** Used to compose unicode character classes. */\n\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\",\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */\n\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n    rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n    rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\n\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction asciiToArray(string) {\n  return string.split('');\n}\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\n\n\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\n\n\nfunction baseValues(object, props) {\n  return arrayMap(props, function (key) {\n    return object[key];\n  });\n}\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\n\n\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\n\n\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\n\n\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n\n  return result;\n}\n/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n\n  return result;\n}\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\n\n\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\n\n\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\n\n\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction stringToArray(string) {\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n}\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n/** Used for built-in method references. */\n\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to detect overreaching core-js shims. */\n\nvar coreJsData = root['__core-js_shared__'];\n/** Used to detect methods masquerading as native. */\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/** Used to resolve the decompiled source of functions. */\n\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/** Built-in value references. */\n\nvar Symbol = root.Symbol,\n    iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeKeys = overArg(Object.keys, Object);\n/* Built-in method references that are verified to be native. */\n\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap');\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\n\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\n\n\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n  array || (array = Array(length));\n\n  while (++index < length) {\n    array[index] = source[index];\n  }\n\n  return array;\n}\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\n\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\n\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\n\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\n\n\nvar isArray = Array.isArray;\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\n\n\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\n\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\n\n\nfunction isString(value) {\n  return typeof value == 'string' || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;\n}\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\n\n\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n\n  if (iteratorSymbol && value[iteratorSymbol]) {\n    return iteratorToArray(value[iteratorSymbol]());\n  }\n\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;\n  return func(value);\n}\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\n\n\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = toArray;","module.exports = require('./lib/emoji');"],"sourceRoot":""}